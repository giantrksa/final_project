version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  spark-master:
    image: bitnami/spark:3.1.2
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "7077:7077"
      - "8080:8080"

  spark-worker:
    image: bitnami/spark:3.1.2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8081:8081"

  airflow-webserver:
    build:
      context: .
      dockerfile: docker/airflow/Dockerfile
    restart: always
    depends_on:
      - postgres
      - spark-master
      - kafka
      - zookeeper
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW__CORE__FERNET_KEY}
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - SPARK_MASTER_HOST_NAME=${SPARK_MASTER_HOST_NAME}
      - SPARK_MASTER_PORT=${SPARK_MASTER_PORT}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "8083:8080"  # Changed from 8082 to 8083 to avoid conflicts
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./spark-scripts:/spark-scripts
      - ./data:/resources/data
    command: ["airflow", "webserver"]

  airflow-scheduler:
    build:
      context: .
      dockerfile: docker/airflow/Dockerfile
    restart: always
    depends_on:
      - airflow-webserver
      - postgres
      - spark-master
      - kafka
      - zookeeper
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW__CORE__FERNET_KEY}
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - SPARK_MASTER_HOST_NAME=${SPARK_MASTER_HOST_NAME}
      - SPARK_MASTER_PORT=${SPARK_MASTER_PORT}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports: []  # No port mapping for scheduler
    volumes:
      - ./dags:/opt/airflow/dags
      # - ./scripts:/opt/airflow/scripts
      - ./spark-scripts:/spark-scripts
      - ./data:/resources/data
    command: ["airflow", "scheduler"]

  dash-app:
    build:
      context: .
      dockerfile: docker/dash-app/Dockerfile
    ports:
      - "8050:8050"
    depends_on:
      - postgres
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

volumes:
  postgres_data:
